@page "/categorias/delete/{CategoriaId:int}"

@inject CategoriasService categoriasService
@inject NavigationManager navigation
@rendermode InteractiveServer

<PageTitle>Delete Categorias</PageTitle>

<div class="container">
    <div class="card-header bg-warning text-center">
        <h1>Eliminar Categoria</h1>
    </div>
    <div class="card-body">
        <h5 class="card-title">Detalles de la Categoria</h5>
        <dl class="row">
            <div class="row">
                <dt class="col-sm-3">CategoriaId:</dt>
                <dd class="col-sm-9">@categoria.CategoriaId</dd>
            </div>
            <div class="row">
                <dt class="col-sm-3">Nombre:</dt>
                <dd class="col-sm-9">@categoria.Nombre</dd>
            </div>
            <div class="row">
                <dt class="col-sm-3">Tipo:</dt>
                <dd class="col-sm-9">@categoria.Tipo</dd>
            </div>
        </dl>
        <div class="card-footer text-center">
            <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar <i class="bi bi-trash3" /></button>
            <button type="button" class="btn btn-outline-primary" @onclick="Volver">Volver <i class="bi bi-arrow-return-left" /></button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int CategoriaId { get; set; }
    public Categorias categoria { get; set; } = new Categorias();
    public List<ToastMessage> messages = new List<ToastMessage>();
    public void Notificacion(ToastType toastType, string message) => messages.Add(ShowToast(toastType, message));
    private ToastMessage ShowToast(ToastType toastType, string message)
    {
        var mensaje = new ToastMessage()
            {
                Type = toastType,
                Message = $"{message}. El {DateTime.Now.ToString("dd/MM/yyyy")} a las {DateTime.Now.ToString("hh:mm tt")}",
            };
        toastService.Notify(mensaje);
        return mensaje;
    }
    protected override async Task OnInitializedAsync()
    {
        categoria = await categoriasService.Buscar(CategoriaId);
    }
    public async Task Eliminar()
    {
        await categoriasService.Eliminar(categoria);
        Notificacion(ToastType.Warning, "Categoria eliminada");
        await Task.Delay(2000);
        await Volver();
    }

    public Task Volver()
    {
        navigation.NavigateTo("/categorias/index");
        return Task.CompletedTask;
    }
}
